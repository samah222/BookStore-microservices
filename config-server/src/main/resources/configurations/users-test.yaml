spring:
  application:
    name: users
    version: v1

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://${myapp.DB-server}:${myapp.DB-port}/${myapp.DB-name}
    password: E15@root

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: 'false'

  rabbitmq:
    host: localhost
    password: guest
    port: 5672
    username: guest

  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: 'true'
            required: 'true'
          auth: 'true'
    username: samahmahdi22@gmail.com
    host: smtp.gmail.com
    password: ejfiixnybohuuttd
    port: '587'

  kafka:
    consumer:
      bootstrap-server: localhost:9002
      group-id: myGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    producer:
      bootstrap-server: localhost:9002
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
  port: '8082'

myapp:
  server: localhost
  DB-server: localhost
  DB-port: 3306
  DB-name: users_service
  openapi:
    dev-url: http://${myapp.server}:${server.port}
    qa-url: http://${myapp.server}:${server.port}
    prod-url: http://${myapp.server}:${server.port}

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
  file:
    name: logs/users-test.log

rabbitmq:
  queue:
    name: queue1
  json:
    queue:
      name: queue1_json
  routingMail-key:
    name: routing_key1_json
  routing-key:
    name: routing_key1
  topic-exchange:
    name: topicExchange1

management:
  tracing:
    sampling:
      probability: 1.0
